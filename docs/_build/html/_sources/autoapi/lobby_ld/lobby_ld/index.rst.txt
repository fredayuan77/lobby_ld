:py:mod:`lobby_ld.lobby_ld`
===========================

.. py:module:: lobby_ld.lobby_ld


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   lobby_ld.lobby_ld.LobbyFile
   lobby_ld.lobby_ld.LobbyIssue




.. py:class:: LobbyFile(token, start_date, end_date, client_state)

   .. py:method:: get_file_summary()

      Get summary statistics on selected lobbying files.

      Output is aggregated by year and quarter. Summary infomation includes:
      number of reports filed during the requested period,
      total expenses associated with these reports,
      total income associated with these reports,
      number of unique clients filed reports during the period,
      and number of unique registrants (lobbying companies or other individual organizations) filed reports during the period.

      :param token: The token requested from Lobbying Disclosure Website.
      :type token: string.
      :param start_date: The start date for requested filing posted period. Date in the 'MM/DD/YYYY' format.
      :type start_date: string.
      :param end_date: The end date for requested filing posted period. Date in the 'MM/DD/YYYY' format.
      :type end_date: string.
      :param client_state: The U.S. state location of lobbying clients or organizations. State name is in two letter abbreviation format.
      :type client_state: string.

      :returns: A pandas dataframe indicates summary information of filtered lobbying files. Index is year_quarter, and columns are aggregated statistics.
      :rtype: pandas.DataFrame

      .. rubric:: Examples

      >>> from lobby_ld import lobby_ld
      >>> import os
      >>> lobby_api = lobby_ld.LobbyFile(os.getenv('PRIVATE_API_KEY'), '01/25/2022', '02/10/2022','NJ')
      >>> lobby_api.get_file_summary()

      ============= ================= ============= ============ ================= =====================
      year_quarter  number_of_reports total_expense total_income number_of_clients number_of_registrants
      ============= ================= ============= ============ ================= =====================
      2021Q4        13                    746000.0      245000.0         3                 10
      2022Q1        5                 0.0               0.0          3                     5
      ============= ================= ============= ============ ================= =====================



.. py:class:: LobbyIssue(token, filing_year, issue_search, client_state)

   .. py:method:: get_issue_file()

      Retrieve a dataframe of lobbying activities around the issue search result.

      Users can search keywords in the issue search field. Any relevant reports under the
      advanced text search will show up.
      Information includes the standard code assigned by Lobbying Disclosure
      Authority in both short and long version, and specific description on the issues
      written by registrants. The dataframe also includes government entity information, if any.

      :returns: A pandas dataframe indicates lobbying activites around the issue keywords.
                This includes both the direct issues and indirect issues in the whole report history.
      :rtype: pandas.DataFrame

      .. rubric:: Examples

      >>> from lobby_ld import lobby_ld
      >>> import os
      >>> issue_api = lobby_ld.LobbyIssue(os.getenv('PRIVATE_API_KEY'), 2022, 'water quality', 'MA')
      >>> issue_api.get_issue_file()

      ====== =================== ============================= ================================ ================================================= ===================================================
      index  general_issue_code  general_issue_code_display    description                      lobbyists                                             government_entities
      ====== =================== ============================= ================================ ================================================= ===================================================
      0      ENV                 Environment/Superfund         Water Quality policies           [{'lobbyist': {'id': 93728, 'prefix': None, 'p..  [{'id': 2, 'name': 'HOUSE OF REPRESENTATIVES'}...
      1      SCI                 Science/Technology            Proposals related to S.1260      [{'lobbyist': {'id': 93728, 'prefix': None, 'p..  [{'id': 2, 'name': 'HOUSE OF REPRESENTATIVES'}...
      2      HCR                 Health Issues                 American Rescue Plan implementa  [{'lobbyist': {'id': 93728, 'prefix': None, 'p..  [{'id': 34, 'name': 'Health & Human Services, ...
      3      ENV                 Environment/Superfund         Water Quality policies.          [{'lobbyist': {'id': 93728, 'prefix': None, 'p..  [{'id': 2, 'name': 'HOUSE OF REPRESENTATIVES'}...
      4      SCI                 Science/Technology            Proposals related to S.1260      [{'lobbyist': {'id': 93728, 'prefix': None, 'p..  [{'id': 2, 'name': 'HOUSE OF REPRESENTATIVES'}...
      5      HCR                 Health Issues                 American Rescue Plan implementa  [{'lobbyist': {'id': 93728, 'prefix': None, 'p..  [{'id': 34, 'name': 'Health & Human Services, ...
      ====== =================== ============================= ================================ ================================================= ===================================================


   .. py:method:: get_issue_description()

      Retrieve standard issue codes on searched issue keywords.
      Users can obtain a list of standard code on issue topics around the keywords. This also include the issue code of other lobbying activities filed within the same reports.

      :returns: An array providing description around the issue keywords in search. This includes the standard issue code of relevant reports.
      :rtype: numpy.array

      .. rubric:: Examples

      >>> from lobby_ld import lobby_ld
      >>> import os
      >>> issue_api = lobby_ld.LobbyIssue(os.getenv('PRIVATE_API_KEY'), 2022, 'water quality', 'MA')
      >>> issue_api.get_issue_description()
      ['Environment/Superfund','Science/Technology','Health Issues']


   .. py:method:: get_issue_lobbyist()

      Retrieve a dataframe of lobbyists working on relevant issues.

      This function gets the comprehensive information on lobbyists, based on the issues he/she lobbied during the year. Lobbyist information includes covered_position, lobbyist.id, lobbyist.prefix, lobbyist.first_name, lobbyist.nickname, lobbyist.middle_name, lobbyist.last_name, and lobbyist.suffix.

      :returns: A pandas dataframe containing information on lobbyists, filtered by the issues, year, and client state location.
      :rtype: pandas.DataFrame

      .. rubric:: Examples

      >>> from lobby_ld import lobby_ld
      >>> import os
      >>> issue_api = lobby_ld.LobbyIssue(os.getenv('PRIVATE_API_KEY'), 2022, 'oil', 'MA')
      >>> issue_api.get_issue_lobbyist()

      ===== ================ =========== ======================== =================== ================= ===================== ================== ========================
      index covered_position lobbyist.id lobbyist.prefix_display  lobbyist.first_name lobbyist.nickname lobbyist.middle_name  lobbyist.last_name lobbyist.suffix_display
      ===== ================ =========== ======================== =================== ================= ===================== ================== ========================
      0     None             45118       None                     MICHAEL             None              None                  BRADLEY            None
      1     None             139718      MR.                      THOMAS              None              None                  CURRY              None
      2     None             139529      MRS.                     HAYLEY              None              None                  BOOK               None
      ===== ================ =========== ======================== =================== ================= ===================== ================== ========================


   .. py:method:: get_lobbyists_count()

      Get number of unique lobbyists working on a broad issue topics.
      Users can filter the result count by client state location, report year, and issue keywords in text.

      :returns: Output is an one sentence string including the number of lobbyists, and its relevant filtering conditions.
      :rtype: string.

      .. rubric:: Examples

      >>> from lobby_ld import lobby_ld
      >>> import os
      >>> issue_api = lobby_ld.LobbyIssue(os.getenv('PRIVATE_API_KEY'), 2021, 'health','NJ')
      >>> issue_api.get_lobbyists_count()
      "180 unique lobbyists are hired by NJ clients to work on health issues in 2021."


   .. py:method:: get_lobbyists_name()

      Get full name for lobbyists who work on a broad issue topics.
      Lobbyist names are filtered by client state location, report year, and issue keywords in text.

      :returns: Output is an array including the full name of lobbyists, based on relevant filtering conditions.
      :rtype: numpy.array

      .. rubric:: Examples

      >>> from lobby_ld import lobby_ld
      >>> import os
      >>> issue_api = lobby_ld.LobbyIssue(os.getenv('PRIVATE_API_KEY'), 2022, 'food','FL')
      >>> issue_api.get_lobbyists_name()
      ['JOHNIE BOATRIGHT' 'ROGER SZEMRAJ' 'PHILIP KARSTING' 'JENNIFER CERVANTES'
      'RYAN WESTON' 'VAN HIPP' 'ROBIN WALKER' 'JOHN PROVENZANO' 'TODD WEISS'
      'JOHN BREAUX' 'JASON GLEASON' 'WALLY BURNETT' 'SALIM ALAMEDDIN'
      'JOHN GREEN' 'MATHEW LAPINSKI' 'STEWART HALL' 'HUNTER MOORHEAD'
      'MARK WARREN' 'EDWARD ROYCE' 'SAMANTHA CARL-YODER' 'DANIEL JOSEPH'
      'CARMENCITA WHONDER' 'DOUGLAS MAGUIRE' 'RUSSELL SULLIVAN'
      'HAROLD HANCOCK' 'JAMES DAVENPORT' 'JOHN MONSIF' 'KYLE GILLEY'
      'STEVE DANON' 'JODI BOCK DAVIDSON' 'ALEX KRIGSTEIN' 'SARAH MATHIAS'
      'ADAM GOODMAN' 'HENRY MENN' 'BRENDA OTTERSON' 'HARRY GLENN'
      'STEVEN GIULI' 'JOSE DIAZ' 'BRIAN BALLARD' 'MARCKIA HAYES']



